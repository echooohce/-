<!DOCTYPE html>
<html>
	<head>
		<meta charset="UTF-8">
		<title></title>
	</head>
	<body>
		<script type="text/javascript">
			//冒泡排序
			/*var times=0;
			var arr=[23,456,1,79,800,12,3,9,8,88,8,7,2,3,3,1234,56];
			for(var i=0;i<arr.length;i++){
				for(var j=0;j<arr.length;j++){
					if(arr[i]<arr[j]){
						var temp=arr[i];
						arr[i]=arr[j];
						arr[j]=temp;
					}
					console.log('循环的次数'+ ++times);//289
				}
			}
			alert(arr);*/
			
			
			
			/*var arr=[23,456,1,79,800,12,3,9,8,88,8,7,2,3,3,1234,56];//136次
			var times=0,temp;
			for(var i=0;i<arr.length-1;i++){//控制一下次数
				for(var j=0;j<arr.length-i-1;j++){//交换的索引,每一次都会排序好一位移到最后。
					if(arr[j]>arr[j+1]){
						temp=arr[j];
						arr[j]=arr[j+1];
						arr[j+1]=temp;
					}
					console.log('循环的次数'+ ++times);//交互的次数
				}
				
			}
			alert(arr);*/
			
			/*var arr=[23,456,1,79,800,12,3,9,8,88,8,7,2,3,3,1234,56];//136
			var times=0,temp;
			for(var i=0;i<arr.length;i++){
				for(var j=i+1;j<arr.length;j++){//交换的索引,每一次都会排序好一位移到最后。
					if(arr[i]>arr[j]){
						temp=arr[i];
						arr[i]=arr[j];
						arr[j]=temp;
					}
					console.log('循环的次数'+ ++times);//交互的次数
				}
				
			}
			alert(arr);*/
			
			//选择排序
			/*var arr=[0,23,456,1,79,800,12,3,9,8,88,8,7,2,3,3,1234,56];
			for(var i=0;i<arr.length;i++){
				var minIndex=i;//minIndex:假设最小值下标，下标是变化的。
				for(var j=i+1;j<arr.length;j++){
					if(arr[j]<arr[minIndex]){//如果arr[j]的值比最小值还小，arr[j]就是最小值，j就是最小的索引
						minIndex=j;	//j就是最小的索引
					}
				}
				//内层的循环结束后，获取到了最小值的索引，和假设最小索引的值进行交换
//				var temp=arr[i];
//				arr[i]=arr[minIndex];
//				arr[minIndex]=temp;
				if(minIndex!=i){//如果假设的刚好就是最小值，不用交换
					var temp=arr[i];
					arr[i]=arr[minIndex];
					arr[minIndex]=temp;
				}
			}
			alert(arr);*/
			
			//快速排序：递归。
			var arr=[0,23,456,1,79,800,12,3,9,8,88,8,7,2,3,3,1234,56];
			function quicksort(array){//array:形参。
				var left=[];//局部，从新开始
				var right=[];
				if(Array.isArray(array)){
					if(array.length<=1){
						return array;//也是数组。输出concat()
					}
					//获取中间值的索引
					var midIndex=Math.floor(array.length/2);
					//截取中间值。改变原数组
					var midValue=array.splice(midIndex,1);
					for(var i=0;i<array.length;i++){
						if(array[i]<midValue){
							left.push(array[i]);
						}else{
							right.push(array[i]);
						}
					}
					return quicksort(left).concat(midValue,quicksort(right));
					
				}else{
					alert('非法操作');
				}
			}
			
			alert(quicksort(arr));
		</script>
	</body>
</html>
